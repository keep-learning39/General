import java.util.Arrays;
import java.util.Scanner;

/**
 * Created by puranisu on 2/10/2016.
 */
public class Chef_CHEFDETE
{
    public static void main(String[] args)
    {
        int N;
        int[] R  , map ;

        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();

        R = new int[N+1];
        map = new int[N+1];
        Arrays.fill(map,-1);

        R[0] = 1;
        map[0] = 1;

        for (int i = 1; i <= N; i++)
        {
            R[i] = scanner.nextInt();
            map[R[i]]=1;
        }
        for (int i = 1; i <= N; i++) {
            if(map[i]==-1)
            {
                System.out.print(i+"  ");
            }
        }
    }
}

/*

N 3
x 2
M 3
M = 0 [1 , 2 , 3 ]
M = 1 [1 , 3 , 6 ]
M = 2 [1 , 4 , 10]
M = 3 [1 , 5 , 15]  <<
M = 4 [1 , 6 , 21]
M = 5 [1 , 7 , 28]
M = 6 [1 , 8 , 36]


1 + 2 + 1 + 1 = 5




N 3
x 3
M 3

M = 0 [1 , 2 , 3 ]
M = 1 [1 , 3 , 6 ]
M = 2 [1 , 4 , 10 ]
M = 3 [1 , 5 , 15 ]


10 + 5




[3 , 3 , 3 ]
M = 1 [ 3 , 6 , 6 ]
M = 2 [ 3 , 9 , 12 ]
M = 3 [ 3 , 12 , 21 ]



N 5
x 5
M 6
M = 0 [1 , 7 , 3 , 5 , 2 ]
M = 1 [1 , 8 , 11 , 16 , 18 ]
M = 2 [1 , 9 , 20 , 36 , 54 ]
M = 3 [1 , 10 , 30 , 66 , 120 ]
M = 4 [1 , 11 , 41 , 107 , 227 ]


x = 4 , m = 3

( 1 + 7 + 3 + 5 )+ (1 + 7 + 3) + (1 + 7)
  1 + 7 + 3 + 5 = 16


((1 + 7 + 3 + 5) + (1 + (1 + 7 ) ( 1 + 7 + 3)))


20 = (1+1+7)+(1+7+3)

M=4 ] 41 = (1*4 + 7) +(1*3 + 7 + () )
               11        10


41 = 11 + 10 + 9 + 1 + 7 + 3

1*4 + 7 + 1*3 + 7 + 1*2 + 7 + 1*1 + 7

107 = 41 + 30  + 20 + 11  + 5
1*4 + 7 + 30 +30  + 20 + 11  + 5
1*4 + 7 + 1*3 + 7 + 20 +  30  + 20 + 11  + 5
1*4 + 7 + 1*3 + 7 + 1*2 + 7 + 11 +  30  + 20 + 11  + 5
1*4 + 7 + 1*3 + 7 + 1*2 + 7 + 1 * 1 + 7 + 3 +  30  + 20 + 11  + 5
1*4 + 7 + 1*3 + 7 + 1*2 + 7 + 1 * 1 + 7 + 3 + 1*3 + 7   + 3  + 20 + 11  + 5











  1 + ( 1 + 7 ) + ( 1 +  7 + 3 ) + ( 1 + 7 + 3 + 5 ) = 36
  1 + ( 1 + 1 + 7 ) + (  1 + 1 + 7 + 1 + 7 + 3  ) = 30
   10

 */